"use strict";(self.webpackChunkmaki=self.webpackChunkmaki||[]).push([[637],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=l.createContext({}),d=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return l.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(n),p=a,f=c["".concat(s,".").concat(p)]||c[p]||m[p]||r;return n?l.createElement(f,o(o({ref:t},u),{},{components:n})):l.createElement(f,o({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var d=2;d<r;d++)o[d]=n[d];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1124:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>w,contentTitle:()=>N,default:()=>L,frontMatter:()=>k,metadata:()=>T,toc:()=>F});var l=n(7462),a=n(7294),r=n(3905),o=n(6010),i=n(2389),s=n(7392),d=n(7094),u=n(2466);const m="tabList__CuJ",c="tabItem_LNqP";function p(e){var t;const{lazy:n,block:r,defaultValue:i,values:p,groupId:f,className:y}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=p??h.map((e=>{let{props:{value:t,label:n,attributes:l}}=e;return{value:t,label:n,attributes:l}})),g=(0,s.l)(b,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===i?i:i??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??h[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:E,setTabGroupChoices:k}=(0,d.U)(),[N,T]=(0,a.useState)(v),w=[],{blockElementScrollPositionUntilNextRender:F}=(0,u.o5)();if(null!=f){const e=E[f];null!=e&&e!==N&&b.some((t=>t.value===e))&&T(e)}const x=e=>{const t=e.currentTarget,n=w.indexOf(t),l=b[n].value;l!==N&&(F(t),T(l),null!=f&&k(f,String(l)))},L=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;n=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;n=w[t]??w[w.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",m)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},y)},b.map((e=>{let{value:t,label:n,attributes:r}=e;return a.createElement("li",(0,l.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>w.push(e),onKeyDown:L,onFocus:x,onClick:x},r,{className:(0,o.Z)("tabs__item",c,null==r?void 0:r.className,{"tabs__item--active":N===t})}),n??t)}))),n?(0,a.cloneElement)(h.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function f(e){const t=(0,i.Z)();return a.createElement(p,(0,l.Z)({key:String(t)},e))}const y="tabItem_Ymn6";function h(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(y,l),hidden:n},t)}const b={0:"0.3.0",1:"0.6.0",2:"0.7.0",3:"0.7.1",4:"0.8.0",5:"0.8.1.1",6:"0.8.3.1"},g=[{name:"dllReferences",type:"array",description:a.createElement(a.Fragment,null,"Your mod's external assembly references. ",a.createElement("br",null),"These use a root path of ",a.createElement("code",null,"/mod-folder/lib/"),", meaning the given paths point to files only in that ",a.createElement("code",null,"/lib/")," folder.",a.createElement("br",null),"If, for example, you have a DLL called ",a.createElement("code",null,"MyDLL.dll")," and another called ",a.createElement("code",null,"Library.dll"),", ",a.createElement("code",null,"dllReferences")," ","would be set to ",a.createElement("code",null,"MyDLL.dll, Library.dll"),".",a.createElement("br",null),a.createElement("br",null),a.createElement("strong",null,"THE FOLLOWING INFORMATION APPLIES ONLY TO 1.3:")," If you have a DLL that references XNA/FNA and need to supply a library for both targets due to cross-OS compatibility, you must name your XNA dll"," ",a.createElement("code",null,"Whatever.dll")," and your FNA DLL ",a.createElement("code",null,"Whatever.FNA.dll"),". In 1.4, this is no longer supported as XNA has been phased out in favor of FNA for all builds."),version:0,defaultValue:a.createElement(a.Fragment,null,"Empty array.")},{name:"modReferences",type:"array",description:a.createElement(a.Fragment,null,"Your mod's references to other mods. Each entry uses the mod's internal name (i.e. ",a.createElement("code",null,"CalamityMod, ThoriumMod"),").",a.createElement("br",null),"You can append ",a.createElement("code",null,"@x.x.x")," to specify the minimum version of a mod (i.e. ",a.createElement("code",null,"CalamityMod@2.0.0.1"),"). If the loaded mod does not match this version, your mod will not load either."),version:0,defaultValue:a.createElement(a.Fragment,null,"Empty array.")},{name:"weakReferences",type:"array",description:a.createElement(a.Fragment,null,"Weakly-referenced mods. Allows you to reference mods without needing to strongly depend on them. You can reference this mod's assembly, compile while referencing it, etc. like a strongly-referenced mod, but your mod will be able to be enabled without the weakly-referenced mods being enabled. This requires extreme care as you can run into issues where your mod tries to use a weakly-referenced mod's assembly when the mod weakly-referenced isn't loaded. Use internal mod names for elements."),version:6,defaultValue:a.createElement(a.Fragment,null,"Empty array.")},{name:"sortAfter",type:"array",description:a.createElement(a.Fragment,null,"Allows you to specify what mods your mod should load after. Use internal mod names for elements."),version:6,defaultValue:a.createElement(a.Fragment,null,"Empty array.")},{name:"sortBefore",type:"array",description:a.createElement(a.Fragment,null,"Allows you to specify what mods your mod should load before. Use internal mod names for elements."),version:6,defaultValue:a.createElement(a.Fragment,null,"Empty array.")},{name:"buildIgnore",type:"array",description:a.createElement(a.Fragment,null,"A list of files to ignore. Supports some regex-powered syntax, functionally similar to ",a.createElement("code",null,".gitignore")," files. Any files listed will not be packed into the compiled mod file."),version:3,defaultValue:a.createElement(a.Fragment,null,"Empty array. If unspecified, ignores ",a.createElement("code",null,"build.txt"),", files and folders beginning with ",a.createElement("code",null,"."),", ",a.createElement("code",null,"bin/"),","," ",a.createElement("code",null,"obj/"),", and ",a.createElement("code",null,"Thumbs.db"),". All ",a.createElement("code",null,".csproj"),","," ",a.createElement("code",null,".cs"),", and ",a.createElement("code",null,".sln")," files will be excluded if"," ",a.createElement("code",null,"includeSource")," is false.")},{name:"author",type:"single",description:a.createElement(a.Fragment,null,"The author is just a string, but you can use commas and whatnot to list multiple people. It has no programmatical signifigance, and is just displayed on the Mod Browser and Mods List."),version:0,defaultValue:a.createElement(a.Fragment,null,"None (mod skeleton provides the author name you input).")},{name:"version",type:"version",description:a.createElement(a.Fragment,null,"Your mod's version. This must be incremented every update.",a.createElement("br",null),"There is no standardized scheme for versions, many mods keep their"," ",a.createElement("code",null,"major")," the same, while incrementing ",a.createElement("code",null,"minor")," for major updates, ",a.createElement("code",null,"patch")," for smaller updates, and"," ",a.createElement("code",null,"revision")," for hotfixes and tweaks.",a.createElement("br",null),"If you would like to use a more recognized version scheme, you can abide by ",a.createElement("a",{href:"https://semver.org/"},"Semantic Versioning 2.0.0"),", though its usage holds little signififance as tModLoader does not recognize SemVer and has no support for proper library management."),version:0,defaultValue:a.createElement(a.Fragment,null,"None (mod skeleton provides the version you input).")},{name:"displayName",type:"single",description:a.createElement(a.Fragment,null,"Your mod's display name. This is shown in various places, and is the name your mod goes by when seen by players. It is separate from your internal name."),version:0,defaultValue:a.createElement(a.Fragment,null,"None (mod skeleton provides the display name you input).")},{name:"noCompile",type:"boolean",description:a.createElement(a.Fragment,null,a.createElement("strong",null,"WARNING: This property is advanced and will not apply to 99% of mods. If you feel you need this, consult someone knowledgeable on the matter before using it."),a.createElement("br",null),"Whether the mod's project should be compiled when building a mod. If false, pre-compiled DLLs by the mod author will be used instead. Starting from 1.4, only one DLL will be searched for, \"",a.createElement("code",null,"YourModName.dll"),'". This DLL will be used instead of compiling a mod project.',a.createElement("br",null),a.createElement("strong",null,"THE FOLLOWING INFORMATION APPLIES ONLY TO 1.3:")," 1.3 has more complicated DLL resolution. If your mod does not directly reference types from XNA/FNA, your DLL should be named ",a.createElement("code",null,"All.dll"),". If your mod references XNA/FNA types, you need a ",a.createElement("code",null,"Windows.dll")," ","file (referencing XNA) and a ",a.createElement("code",null,"Mono.dll")," file (referencing FNA and a FNA version of Terraria)."),version:1,defaultValue:a.createElement(a.Fragment,null,"False")},{name:"hideCode",type:"boolean",description:a.createElement(a.Fragment,null,"If true, users may unpack your mod through tModLoader to get the compiled DLL files of your mod. This must be set to true for source code to be packed as well with ",a.createElement("code",null,"incluedSource"),"."),version:2,defaultValue:a.createElement(a.Fragment,null,"False")},{name:"hideResources",type:"boolean",description:a.createElement(a.Fragment,null,"If true, resource files (",a.createElement("code",null,".png"),", ",a.createElement("code",null,".wav"),","," ",a.createElement("code",null,".rawimg"),", etc.) will not be unpacked when a user attempts to unpack your mod through tModLoader."),version:2,defaultValue:a.createElement(a.Fragment,null,"False")},{name:"includeSource",type:"boolean",description:a.createElement(a.Fragment,null,"If true, the actual source code of your mod will be packed into the compiled mod file and will be unpacked when a user attempts to unpack your mod through tModLoader."),version:2,defaultValue:a.createElement(a.Fragment,null,"False")},{name:"includePDB",type:"boolean",description:a.createElement(a.Fragment,null,a.createElement("strong",null,"As of"," ",a.createElement("a",{href:"https://github.com/tModLoader/tModLoader/pull/1086"},"TML-1096")," ","(more broadly, as of tModLoader 1.4), this property is no longer used."),"Whether your mod's ",a.createElement("code",null,".pdb")," file should be included. Helpful for debugging, but bloats compiled mod file size. May cause some undocumented issues, but is generally good to include."),version:4,defaultValue:a.createElement(a.Fragment,null,"True")},{name:"languageVersion",type:"single",description:a.createElement(a.Fragment,null,a.createElement("strong",null,"DEPRECATED; THIS APPLIES TO OUTDATED VERSIONS OF tModLoader ONLY."),a.createElement("br",null),"The C# language version to compile with from tModLoader. Ignored when building through your project."),version:4,defaultValue:a.createElement(a.Fragment,null,"Unused.")},{name:"homepage",type:"single",description:a.createElement(a.Fragment,null,"An openable link pointing to your mod's homepage. This can be accessed from the Mod Browser, Steam Workshop (1.4 only), and Mods List."),version:2,defaultValue:a.createElement(a.Fragment,null,"Empty string. Results in no homepage button.")},{name:"modSide",type:"side",description:a.createElement(a.Fragment,null,"The mod's network side. See the full article on mod sides",a.createElement("a",{href:"/docs/tmodloader/net/modside"},"here"),"."),version:5,defaultValue:a.createElement(a.Fragment,null,"Both")},{name:"",type:"single",description:a.createElement(a.Fragment,null,"\xa0"),version:9999,defaultValue:a.createElement(a.Fragment,null,"\xa0")}];function v(e){let{version:t}=e;return a.createElement("table",null,a.createElement("tr",null,a.createElement("th",null,"Name"),a.createElement("th",null,"Type"),a.createElement("th",null,"Description"),a.createElement("th",null,"Default Value"),a.createElement("th",null,"Version Added")),a.createElement(E,{version:t}))}function E(e){let{version:t}=e;const n=[];for(const l of g)l.version<=t&&n.push(a.createElement("tr",{key:l.name},a.createElement("td",null,a.createElement("code",null,l.name)),a.createElement("td",null,a.createElement("code",null,l.type)),a.createElement("td",null,l.description),a.createElement("td",null,l.defaultValue),a.createElement("td",null,b[l.version])));return a.createElement(a.Fragment,null,n)}const k={},N="Mod Build Manifest File Documentation",T={unversionedId:"tmodloader/files/build",id:"tmodloader/files/build",title:"Mod Build Manifest File Documentation",description:"The build.txt file has been around for quite some time, but may be reaching its end-of-life shortly (see: TML-2472).",source:"@site/docs/tmodloader/files/build.mdx",sourceDirName:"tmodloader/files",slug:"/tmodloader/files/build",permalink:"/docs/tmodloader/files/build",draft:!1,editUrl:"https://github.com/steviegt6/maki/tree/master/docs/tmodloader/files/build.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"File Formats",permalink:"/docs/tmodloader/files/"},next:{title:"Decription File Documentation",permalink:"/docs/tmodloader/files/description"}},w={},F=[{value:"File Format",id:"file-format",level:2}],x={toc:F};function L(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,l.Z)({},x,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mod-build-manifest-file-documentation"},"Mod Build Manifest File Documentation"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"build.txt")," file has been around for quite some time, but may be reaching its end-of-life shortly (see: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tModLoader/tModLoader/pull/2472"},"TML-2472"),").")),(0,r.kt)("p",null,"The Mod Build Manifest file format is used for defining mod properties (mostly build properties). The ",(0,r.kt)("inlineCode",{parentName:"p"},"build.txt")," file laying in the root folder of your mod is the only file that uses this format."),(0,r.kt)("h2",{id:"file-format"},"File Format"),(0,r.kt)("p",null,"Mod Build Manifest files use properties represented as key-value pairs. Keys are the property names, and values are strings of text. There are several property types:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"single"),", a single value, represented as ",(0,r.kt)("inlineCode",{parentName:"li"},"yourKey = your value here"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"boolean"),", a ",(0,r.kt)("inlineCode",{parentName:"li"},"single")," which evaluates to ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),' if the value is "',(0,r.kt)("inlineCode",{parentName:"li"},"true"),'" (case-insensitive), otherwise evauluates to "',(0,r.kt)("inlineCode",{parentName:"li"},"false"),'". Represented as ',(0,r.kt)("inlineCode",{parentName:"li"},"yourKey = true")," (and ",(0,r.kt)("inlineCode",{parentName:"li"},"yourKey = false")," or anything else not case-insensitively equal to ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"version"),", a ",(0,r.kt)("inlineCode",{parentName:"li"},"single"),' value which has two to four "elements". Each "element" must be a positive integer that can go up to ',(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/dotnet/api/system.int32.maxvalue?view=net-6.0"},(0,r.kt)("inlineCode",{parentName:"a"},"int.MaxValue")),". Represented as ",(0,r.kt)("inlineCode",{parentName:"li"},"x.x"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"x.x.x"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"x.x.x.x"),'. Each "element" is separated by a period (',(0,r.kt)("inlineCode",{parentName:"li"},"."),"). Represented as ",(0,r.kt)("inlineCode",{parentName:"li"},"yourKey = 1.2.3.4")," (or any aforementioned variation)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"side"),", represents a ","[`Terraria.ModLoader.ModSide]",", can only be ",(0,r.kt)("inlineCode",{parentName:"li"},"Both"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Client"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Server"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"NoSync"),". Represented as ",(0,r.kt)("inlineCode",{parentName:"li"},"yourKey = SideGoesHere")," (",(0,r.kt)("inlineCode",{parentName:"li"},"yourKey = Both"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"yourKey = Client"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"yourKey = Server"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"yourKey = NoSync"),")."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"array"),", an array of elements. Elements are separated using a comma (",(0,r.kt)("inlineCode",{parentName:"li"},","),"), and any element may have trailing spaces (",(0,r.kt)("inlineCode",{parentName:"li"}," "),") as they are trimmed after being split. Represented as ",(0,r.kt)("inlineCode",{parentName:"li"},"yourKey = element1, element2, element3, ..."),".")),(0,r.kt)("p",null,"Every key is case-sensitive, but keys just need their expected value."),(0,r.kt)(f,{mdxType:"Tabs"},(0,r.kt)(h,{value:"v0.8.3.1",label:"v0.8.3.1+ (Latest)",mdxType:"TabItem"},(0,r.kt)(v,{version:6,mdxType:"BuildTable"})),(0,r.kt)(h,{value:"v0.8.1.1",label:"v0.8.1.1",mdxType:"TabItem"},(0,r.kt)(v,{version:5,mdxType:"BuildTable"})),(0,r.kt)(h,{value:"v0.8.0",label:"v0.8.0",mdxType:"TabItem"},(0,r.kt)(v,{version:4,mdxType:"BuildTable"})),(0,r.kt)(h,{value:"v0.7.1",label:"v0.7.1",mdxType:"TabItem"},(0,r.kt)(v,{version:3,mdxType:"BuildTable"})),(0,r.kt)(h,{value:"v0.7.0",label:"v0.7.0",mdxType:"TabItem"},(0,r.kt)(v,{version:2,mdxType:"BuildTable"})),(0,r.kt)(h,{value:"v0.6.0",label:"v0.6.0",mdxType:"TabItem"},(0,r.kt)(v,{version:1,mdxType:"BuildTable"})),(0,r.kt)(h,{value:"v0.3.0",label:"v0.3.0",mdxType:"TabItem"},(0,r.kt)(v,{version:0,mdxType:"BuildTable"}))))}L.isMDXComponent=!0}}]);